LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.NUMERIC_STD.ALL;
--------------------------------

ENTITY Ball_ctrl IS 
    PORT(clk             : IN  STD_LOGIC;
	      rst             : IN  STD_LOGIC;
			b_up            : IN  STD_LOGIC;
			b_down          : IN  STD_LOGIC;
			ballDisplay     : OUT STD_LOGIC_VECTOR(111 DOWNTO 0));
END ENTITY;
------------------------------------

ARCHITECTURE Control OF Ball_ctrl IS

  TYPE state IS (rght, lft, u_rght, u_lft, d_rght, d_lft);
  
  SIGNAL pr_state, nx_state : state := u_rght;
  SIGNAL max_tick_s         : STD_LOGIC;
  SIGNAL ball_s             : STD_LOGIC_VECTOR (111 DOWNTO 0) := (67 => '0', OTHERS => '1');
  SIGNAL ball_nx            : STD_LOGIC_VECTOR (111 DOWNTO 0) := (67 => '0', OTHERS => '1');
 -- SIGNAL action             : STD_LOGIC_VECTOR (1 DOWNTO 0);
  
  BEGIN 
    
	 ballDisplay <= ball_s;
	-- action        <= b_up & b_down;
	 
    BallSpeed : ENTITY work.Test_Univ_Bin_Counter
                      PORT MAP( clk      => clk,
							           rst      => rst,
										  ena      => '1',
										  syn_clr  => '0',
										  load     => '0',
										  up       => '1',
										  d        =>"0000000000000000000000",
										  max_tick => max_tick_s);
										  
										  
    ----------sequential section: -----------------
	 PROCESS (rst, clk)
	   BEGIN
	     IF (rst = '1')THEN
		    pr_state <= u_rght;----- agregar estado reset
		  ELSIF (rising_edge(clk))THEN 
		    pr_state   <= nx_state;
			 ball_s   <= ball_nx;
			END IF;
	  END PROCESS;
	 ----------- combinational section: ------------
	PROCESS (ball_s, ball_nx, max_tick_s, pr_state)
     BEGIN 
	    CASE pr_state IS
		 
		   WHEN set => 
			  ball_nx <= ball_s;
		     IF ( max_tick_s = '1')THEN 
				   nx_state <= u_rght;
				  ELSE 
				    nx_state <= set;
			  END IF;
	-----------------------------------------------------		  
			WHEN u_rght =>
	        ball_nx <= ball_s;
		     IF (max_tick_s = '1')THEN 
			    IF(ball_s(16) = '0' OR ball_s(24) = '0')THEN
				   ball_nx <= "00011111";
					nx_state <= d_rght;
					ELSE
			  	 racket_nx <= racket_s(6 DOWNTO 0) & '1';
				 nx_state <= stand;
				 END IF;
			  ELSE
			    nx_state <= up;
			  END IF;
	--------------------------------------------------------		  
			WHEN down =>
	        racket_nx <= racket_s;
		     IF (max_tick_s = '1')THEN 
			    IF(racket_s = "11111000")THEN
				   racket_nx <= "11111000";
					nx_state <= stand;
					ELSE
			  	 racket_nx <=  '1' & racket_s(7 DOWNTO 1);
				 nx_state <= stand;
				 END IF;
			  ELSE
			    nx_state <= down;
			  END IF;
	    END CASE;
	  END PROCESS;
	END ARCHITECTURE;  